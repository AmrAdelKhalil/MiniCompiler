<ID> : ifhi
<PLUS> : +
<MINUS> : -
<ID> : elsebye
<EOL> : \n
<IF_CONDITION> : if
<LEFT_ROUND_B> : (
<ID> : i
<LOGICAL_AND> : &&
<ID> : j
<RIGHT_ROUND_B> : )
<LEFT_CURLY_B> : {
<EOL> : \n
<RIGHT_CURLY_B> : }
<ELSE_CONDITION> : else
<LEFT_CURLY_B> : {
<RIGHT_CURLY_B> : }
<EOL> : \n
<INT_DATA_TYPE> : int
<ID> : x
<EQUAL> : =
<INTEGRAL_LITERAL> : 5
<INTEGRAL_LITERAL> : 6
<COMMA> : ,
<ID> : intg
<EQUAL> : =
<INTEGRAL_LITERAL> : 8
<MINUS> : -
<INTEGRAL_LITERAL> : 5
<SEMI_COLON> : ;
<EOL> : \n
<EOL> : \n
<EOL> : \n
<EOL> : \n
<LEFT_SQUARE_B> : [
<ID> : sds
<RIGHT_SQUARE_B> : ]
<ELSE_CONDITION> : else
<NOT> : !
<NOT> : !
<EOL> : \n
<IF_CONDITION> : if
<LEFT_ROUND_B> : (
<ID> : k
<LESS_THAN> : <
<ID> : i
<RIGHT_ROUND_B> : )
<LEFT_CURLY_B> : {
<IF_CONDITION> : if
<LEFT_ROUND_B> : (
<ID> : i
<GREATER_THAN> : >
<EQUAL> : =
<ID> : k
<RIGHT_ROUND_B> : )
<ELSE_CONDITION> : else
<EOL> : \n
<EQUAL> : =
<INT_DATA_TYPE> : int
<EOL> : \n
<ID> : floatadel2
<INTEGRAL_LITERAL> : 2
<EOL> : \n
<FLOAT_LITERAL> : 356.3
<DOT> : .
<COMMENT2> : /*'."*/
<COMMENT_L> : /*
<SINGLE_QOUTE> : '
<DOT> : .
<DOUBLE_QOUTES> : "
<COMMENT_R> : */
<EOL> : \n
<CHAR> : char
<FLOAT_LITERAL> : 3.3
<DOT> : .
<EOL> : \n
<ID> : charlff
<DOUBLE_QOUTES> : "
<FLOAT_LITERAL> : 3.2
<DOT> : .
<INTEGRAL_LITERAL> : 55
<DOUBLE_QOUTES> : "
<ID> : _amr
<EOL> : \n
<COMMENT1> : //sdadsd//mainmainthis
<ID> : sdadsd
<ID> : mainmainthis
<EOL> : \n
<MAIN> : main
<EOL> : \n
<THIS> : this
<EOL> : \n
<ID> : publicthis
<EOL> : \n
<PUBLIC> : public
<VOID> : void
<ID> : Void
<CLASS> : class
<ID> : CLASS
<WHILE> : while
<ID> : While
<ID> : lengthlength
<EOL> : \n
<FLOAT> : float
<ID> : xflaot
<EQUAL> : =
<INTEGRAL_LITERAL> : 222
<SEMI_COLON> : ;
<EOL> : \n
<BOOLEAN> : boolean
<ID> : booleanbolean
<EQUAL> : =
<INTEGRAL_LITERAL> : 11
<EOL> : \n
<ID> : charr
<CHAR> : char
<MULTIPLAY> : *
<EOL> : \n
<ID> : sYSTEM
<DOT> : .
<ID> : out
<DOT> : .
<ID> : println
<EOL> : \n
<ID> : System
<SYSTEM.OUT.PRINTLN> : System.out.println
<DOT> : .
<ID> : out
<DOT> : .
<ID> : println
<LEFT_ROUND_B> : (
<EOL> : \n
<ID> : staticS
<EOL> : \n
<STATIC> : static
<EOL> : \n
-----------------------------
Errors Number: 5
<ERROR> : /
<ERROR> : @
<ERROR> : #
<ERROR> : $
<ERROR> : $$$
